version: '3'

tasks:
  build:
    desc: Build a Docker image
    cmds:
      - if [ -z "{{.APP_NAME}}" ]; then echo "APP_NAME var is not set"; exit 1; fi
      - if [ -z "{{.APP_VERSION}}" ]; then echo "APP_VERSION var is not set"; exit 1; fi
      - if [ -z "{{.ARCH}}" ]; then echo "ARCH var is not set"; exit 1; fi
      - docker build --build-arg ARCH={{.ARCH}} --build-arg APP_NAME={{.APP_NAME}} --build-arg APP_VERSION={{.APP_VERSION}} -t {{.APP_NAME}}:{{.APP_VERSION}} -f .ci/Dockerfile .

  push:
    desc: Push a Docker image
    cmds:
      - if [ -z "{{.APP_NAME}}" ]; then echo "APP_NAME var is not set"; exit 1; fi
      - if [ -z "{{.APP_VERSION}}" ]; then echo "APP_VERSION var is not set"; exit 1; fi
      - if [ -z "{{.REGISTRY_REPO}}" ]; then echo "REGISTRY_REPO var is not set"; exit 1; fi
      - docker tag {{.APP_NAME}}:{{.APP_VERSION}} {{.REGISTRY_REPO}}:{{.APP_VERSION}}
      - docker push {{.REGISTRY_REPO}}:{{.APP_VERSION}}

  save:
    desc: Saves a Docker image to a file
    cmds:
      - if [ -z "{{.APP_NAME}}" ]; then echo "APP_NAME var is not set"; exit 1; fi
      - if [ -z "{{.APP_VERSION}}" ]; then echo "APP_VERSION var is not set"; exit 1; fi
      - mkdir -p tmp
      - docker save -o tmp/{{.APP_NAME}}_{{.APP_VERSION}}.tar {{.APP_NAME}}:{{.APP_VERSION}}

  load:
    desc: Load a Docker image from a file
    cmds:
      - if [ -z "{{.APP_NAME}}" ]; then echo "APP_NAME var is not set"; exit 1; fi
      - if [ -z "{{.APP_VERSION}}" ]; then echo "APP_VERSION var is not set"; exit 1; fi
      - docker load -i tmp/{{.APP_NAME}}_{{.APP_VERSION}}.tar
