version: '3'

vars:
  APP_NAME:
    sh: basename $(pwd)

tasks:
  all:
    desc: Run all tests
    cmds:
      - task: test.unit

  test.unit:
    desc: Run unit tests
    vars:
      GOTEST:
        sh: which gotest || echo go test
    cmds:
      - '{{.GOTEST}} -v -mod=vendor -race {{default "./..." .CLI_ARGS}}'

  test.func:
    desc: Run functional tests
    vars:
      GOTEST:
        sh: which gotest || echo go test
    cmds:
      - docker compose -p {{.APP_NAME}}_tests -f docker-compose.tests.yaml up --remove-orphans -d
      - docker compose -p {{.APP_NAME}}_tests -f docker-compose.tests.yaml run --rm --remove-orphans tests go test -v -mod=vendor -tags=functest ./tests/...

  test.func.manual:
    desc: Interactively attach to functional tests container
    cmds:
      - docker compose -p {{.APP_NAME}}_tests -f docker-compose.tests.yaml up --remove-orphans -d
      - docker compose -p {{.APP_NAME}}_tests -f docker-compose.tests.yaml run --rm -i tests sh

  test.func.clean:
    desc: Cleanup test environment
    cmds:
      - docker compose -p {{.APP_NAME}}_tests -f docker-compose.tests.yaml down --remove-orphans
      - docker compose -p {{.APP_NAME}}_tests -f docker-compose.tests.yaml down -v
