name: build
on:
  workflow_call:
    inputs:
      app_name:
        type: string
        required: true
      app_target:
        type: string
        required: true
      idf_version:
        type: string
        default: release-v5.3
      workdir:
        type: string
        default: .

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: Get version info
        run: |
          VER=$(cat ${{inputs.workdir}}/version.txt | head -n 1)
          VER_ALPHA=$(echo $VER | awk -F "." '{print $4}')
          VER=$(echo $VER | awk -F "." '{print $1"."$2"."$3}')
          if [ "${VER_ALPHA}" != "0" ]; then
              VER="${VER}-alpha${VER_ALPHA}"
          fi
          echo "APP_VERSION=${VER}" >> ${GITHUB_ENV}
      - name: Build
        run: |
          cd ${{inputs.workdir}}
          cp sdkconfig.${{inputs.app_target}} sdkconfig
          docker run --rm -v $PWD:/project -w /project espressif/idf:${{inputs.idf_version}} idf.py build
          mkdir -p ./__release
          cp ./build/${{inputs.app_name}}.bin ./__release/${{inputs.app_name}}-${APP_VERSION}-${{inputs.app_target}}.bin
          cp ./build/bootloader/bootloader.bin ./__release/${{inputs.app_name}}-bootloader-${APP_VERSION}-${{inputs.app_target}}.bin
      - name: Check version info
        if: ${{ github.ref_type == 'tag' }}
        run: |
          if [ "${{ github.ref_name }}" != "${APP_VERSION}" ]; then
            echo "Version mismatch"
            echo "tag: ${{github.ref_name}}"
            echo "version.txt: ${APP_VERSION}"
            exit 1
          fi
      - uses: ncipollo/release-action@v1
        if: ${{ github.ref_type == 'tag' }}
        with:
          allowUpdates: true
          artifactErrorsFailBuild: true
          artifacts: ${{inputs.workdir}}/__release/*
          generateReleaseNotes: true
          makeLatest: ${{ !contains(github.ref_name, '-alpha') }}
          prerelease: ${{ contains(github.ref_name, '-alpha') }}
          removeArtifacts: true
          replacesArtifacts: true
