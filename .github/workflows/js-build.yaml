name: build-react-app
on:
  workflow_call:
    inputs:
      app_name:
        type: string
        required: true
      app_version:
        type: string
        required: true
      registry_host:
        type: string
        required: false
      registry_user:
        type: string
        required: false
    secrets:
      dotenv:
        required: false
      ci_private_key:
        required: false
      registry_password:
        required: false

jobs:
  image:
    runs-on: ubuntu-latest
    env:
      DOTENV: ${{ secrets.dotenv }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/checkout@v4
        with:
          repository: ashep/ci
          ref: v1
          path: .ci
      - uses: actions/setup-node@v3
      - run: |
          if [ ! -d node_modules ]; then npm install; fi
          echo -e "${{ secrets.dotenv }}" > .env
          npm run build
      - uses: ashep/ci/actions/build-image@v1
        with:
          app_name: ${{ inputs.app_name }}
          app_version: ${{ inputs.app_version }}
          dockerfile: .ci/js/Dockerfile
      - uses: docker/login-action@v3
        with:
          registry: ${{ inputs.registry_host }}
          username: ${{ inputs.registry_user }}
          password: ${{ secrets.registry_password }}
      - uses: ashep/ci/actions/build-image@v1
        if: github.ref_name == 'main'
        with:
          app_name: ${{ inputs.app_name }}
          app_version: ${{ inputs.app_version }}
          dockerfile: ${{ inputs.dockerfile }}
          registry_host: ${{ inputs.registry_host }}
          registry_user: ${{ inputs.registry_user }}
          tag_name: latest
      - uses: ashep/ci/actions/build-image@v1
        if: github.ref_name != 'main'
        with:
          app_name: ${{ inputs.app_name }}
          app_version: ${{ inputs.app_version }}
          dockerfile: ${{ inputs.dockerfile }}
          registry_host: ${{ inputs.registry_host }}
          registry_user: ${{ inputs.registry_user }}
          tag_name: dev
      - uses: ashep/ci/actions/build-image@v1
        if: github.ref_type == 'tag'
        with:
          app_name: ${{ inputs.app_name }}
          app_version: ${{ inputs.app_version }}
          dockerfile: ${{ inputs.dockerfile }}
          registry_host: ${{ inputs.registry_host }}
          registry_user: ${{ inputs.registry_user }}
          tag_name: ${{ github.ref_name }}
